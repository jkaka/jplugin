#set($packagePath = $!context.packagePath)
#set($entity = $!context.entity)
#set($beanName = $!context.beanName)
#set($sysCode = $!context.sysCode)
#set($uriPrefix = $!context.uriPrefix)
#set($columns = $!context.columns)
#set($tableName = $!context.tableName)
#set($colKey = $!context.colKey)
#set($type = $!context.type)
#set($rootPackage = $!context.rootPackage)
package $!packagePath;

import com.kaka.common.base.BaseResult;
import $!{rootPackage}.ApplicationTest;
import $!{rootPackage}.#if(!$!{context.codeStatus})client.#{end}dto.$!{entity}DTO;
import org.junit.Assert;
import org.junit.Test;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.transaction.annotation.Transactional;

import java.util.ArrayList;

/**
* @author jsk
* @Date $!context.date
*/
@Transactional
public class $!{entity}$!{type} extends ApplicationTest {
    @Autowired
    private $!{entity}WriteService $!{beanName}WriteService;

#set($isStatus = "false")
#set($isLastUser = "false")
#foreach($column in $columns)
    #if($!column.attrName=="status")
        #set($isStatus ="true")
    #elseif($!column.attrName=="lastUser")
        #set($isLastUser ="true")
    #end
#end

#if($!isStatus=="true")
    @Test
    public void enable() {
        BaseResult<Integer> baseResult = $!{beanName}WriteService.enable(99L#if($!isLastUser == "true"), "system"#end);
        Assert.assertTrue("$!{beanName}WriteService.enable 测试失败!", baseResult.getSuccess());
    }

    @Test
    public void disable() {
    BaseResult<Integer> baseResult = $!{beanName}WriteService.disable(99L#if($!isLastUser == "true"), "system"#end);
        Assert.assertTrue("$!{beanName}WriteService.disable 测试失败!", baseResult.getSuccess());
    }
#end
    @Test
    public void insert() {
        BaseResult<Integer> baseResult = $!{beanName}WriteService.insert(new $!{entity}DTO());
        Assert.assertTrue("$!{beanName}WriteService.insert 测试失败!", baseResult.getSuccess());
    }
    
    @Test
    public void update() {
        BaseResult<Integer> baseResult = $!{beanName}WriteService.update(new $!{entity}DTO());
        Assert.assertTrue("$!{beanName}WriteService.update 测试失败!", baseResult.getSuccess());
    }
    
    @Test
    public void insertBatch() {
        BaseResult<Boolean> baseResult = $!{beanName}WriteService.insertBatch(new ArrayList<>());
        Assert.assertTrue("$!{beanName}WriteService.insertBatch 测试失败!", baseResult.getSuccess());
    }
    
    @Test
    public void updateBatch() {
        BaseResult<Boolean> baseResult = $!{beanName}WriteService.updateBatch(new ArrayList<>());
        Assert.assertTrue("$!{beanName}WriteService.updateBatch 测试失败!", baseResult.getSuccess());
    }
    
    @Test
    public void insertAndUpdateBatch() {
        BaseResult<Boolean> baseResult = $!{beanName}WriteService.insertAndUpdateBatch(new ArrayList<>(), new ArrayList<>());
        Assert.assertTrue("$!{beanName}WriteService.insertAndUpdateBatch 测试失败!", baseResult.getSuccess());
    }
}